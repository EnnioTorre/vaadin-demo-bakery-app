apiVersion: v1
kind: Template
labels:
  template: demobackery
  group: demobackery
metadata:
  name: demobackery
  description: "Template containing application artifacts."
parameters:
- displayName: prod project name
  value: prod-demobakery
  name: PROD_PROJECT
  required: true
- displayName: Quay.io Image Repository
  description: Quay.io repository for pushing Tasks container images
  name: QUAY_REPOSITORY
  required: true
  value: demobakery
- displayName: Application name
  description: Name of the application
  name: APP_NAME
  required: true
- displayName: Application repository
  description: repository containing application code
  name: APP_REPO
  required: true
- displayName: Repository branch
  description: Code base branch
  name: APP_BRANCH
  required: true
- displayName: memory
  description: memory allocation
  name: MEMORY
  required: false
- displayName: cpu
  description: cpu allocation
  name: CPU
  required: false
- displayName: Application replicas
  description: number of application replicas
  name: REPLICAS
  required: false
- displayName: Images tag 
  description: tag of application image
  name: IMAGE_TAG
  required: false
objects:
# DEPLOYMNETCONFIG
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
    namespace: ${PROD_PROJECT}
  spec:
    replicas: ${{REPLICAS}}
    selector:
      app: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
      spec:
        containers:
        - env: []
          image: ${QUAY_REPOSITORY}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            name: 8080-tcp
            protocol: TCP
          resources:
            limits:
              cpu: ${{CPU}}
              memory: ${MEMORY}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              httpHeaders:
                - name: Authorization
                  value: Basic YWRtaW5AdmFhZGluLmNvbTphZG1pbg==
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
# SERVICE
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
    namespace: ${PROD_PROJECT}
  spec:
    ports:
    - name: http-port
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
# ROUTE
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
    namespace: ${PROD_PROJECT}
  spec:
    port:
      targetPort: http-port
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None